# Generated by Django 4.2.6 on 2025-01-16 11:53

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Blog Başlığı')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('content', ckeditor.fields.RichTextField(verbose_name='İçerik')),
                ('image', models.ImageField(upload_to='blog/', verbose_name='Blog Görseli')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Oluşturulma Tarihi')),
                ('category', models.CharField(max_length=100, verbose_name='Kategori')),
                ('author', models.CharField(max_length=100, verbose_name='Yazar')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif mi?')),
            ],
            options={
                'verbose_name': 'Blog Yazısı',
                'verbose_name_plural': 'Blog Yazıları',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='BoilerModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Model Adı')),
            ],
            options={
                'verbose_name': 'Kombi Modelleri',
                'verbose_name_plural': 'Kombi Modelleri',
            },
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Marka Adı')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/', verbose_name='Marka Logosu')),
                ('description', models.TextField(blank=True, verbose_name='Marka Açıklaması')),
            ],
        ),
        migrations.CreateModel(
            name='CompanyContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_name', models.CharField(max_length=200, verbose_name='Firma Adı')),
                ('working_hours', models.CharField(max_length=100, verbose_name='Çalışma Saatleri')),
                ('social_media', models.JSONField(blank=True, null=True, verbose_name='Sosyal Medya')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefon')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('address', models.TextField(verbose_name='Adres')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Firma Bilgileri',
                'verbose_name_plural': 'Firma Bilgileri',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Ad Soyad')),
                ('phone', models.CharField(max_length=15, verbose_name='Telefon')),
                ('address', models.TextField(verbose_name='Adres')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='E-posta')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Müşteri',
                'verbose_name_plural': 'Müşteriler',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Hizmet Adı')),
                ('description', models.TextField(verbose_name='Hizmet Açıklaması')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Fiyat')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Hizmet Görseli')),
            ],
            options={
                'verbose_name': 'Hizmet',
                'verbose_name_plural': 'Hizmetler',
            },
        ),
        migrations.CreateModel(
            name='VideoContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Video Başlığı')),
                ('description', models.TextField(verbose_name='Video Açıklaması')),
                ('youtube_url', models.URLField(verbose_name='YouTube Video URL')),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='video_thumbnails/', verbose_name='Video Küçük Resmi')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('views', models.PositiveIntegerField(default=0, verbose_name='İzlenme Sayısı')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_featured', models.BooleanField(default=False, verbose_name='Öne Çıkan')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='mainapp.brand', verbose_name='Kombi Markası')),
            ],
            options={
                'verbose_name': 'Video İçeriği',
                'verbose_name_plural': 'Video İçerikleri',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('problem_description', models.TextField(verbose_name='Sorun Açıklaması')),
                ('appointment_date', models.DateTimeField(verbose_name='Randevu Tarihi')),
                ('status', models.CharField(choices=[('pending', 'Bekliyor'), ('in_progress', 'İşleme Alındı'), ('completed', 'Tamamlandı'), ('cancelled', 'İptal Edildi')], default='pending', max_length=20, verbose_name='Durum')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notlar')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.customer', verbose_name='Müşteri')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mainapp.service', verbose_name='Hizmet')),
            ],
            options={
                'verbose_name': 'Servis Talebi',
                'verbose_name_plural': 'Servis Talepleri',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='Soru')),
                ('answer', models.TextField(verbose_name='Cevap')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='faqs', to='mainapp.brand', verbose_name='Marka')),
            ],
            options={
                'verbose_name': 'Sıkça Sorulan Soru',
                'verbose_name_plural': 'Sıkça Sorulan Sorular',
            },
        ),
        migrations.CreateModel(
            name='ErrorCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=10, verbose_name='Hata Kodu')),
                ('description', models.TextField(verbose_name='Hata Açıklaması')),
                ('solution', models.TextField(verbose_name='Çözüm')),
                ('boiler_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='error_codes', to='mainapp.boilermodel')),
            ],
            options={
                'verbose_name': 'Hata Kodları',
                'verbose_name_plural': 'Hata Kodları',
            },
        ),
        migrations.AddField(
            model_name='boilermodel',
            name='brand',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boilers', to='mainapp.brand', verbose_name='Marka'),
        ),
    ]
